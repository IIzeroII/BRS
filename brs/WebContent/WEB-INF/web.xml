<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
	
	<!-- 欢迎页 -->
	<welcome-file-list>
		<welcome-file>/brs/jsp/login.jsp</welcome-file>
	</welcome-file-list>
	 
	  <!-- 设置session的过期时间 -->
	<session-config>
		<session-timeout>5</session-timeout>
	</session-config>
	
	 <!-- URL过滤器配置 -->
	 <filter>
          <filter-name>URLfilter</filter-name>
          <filter-class>com.brs.Filter.URLFilter</filter-class>
     </filter>
     <filter-mapping>
            <filter-name>URLfilter</filter-name>
            <url-pattern>/*</url-pattern>
     </filter-mapping>
	 
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<!-- *可以表示目录下的所有 -->
		<param-value>
		classpath:conf/brs/spring.xml
		</param-value>
	</context-param>
	
	 <!-- 设置在事务提交之后延迟加载显示所需要的对象,把一个Hibernate Session和一次完整的请求过程对应的线程相绑定,可以防止lazy加载 -->
	<filter>
		<filter-name>OpenSessionInViewFilter</filter-name>
		<filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>
		<!-- 若为false则等于没用OpenSessionInViewFilter -->
		<init-param>
			<param-name>singleSession</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>OpenSessionInViewFilter</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>
	 
	 <!-- strus2核心过滤器配置 -->
	 <filter>
	   <filter-name>strus2</filter-name>
	   <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
	   <init-param>
			<param-name>config</param-name>
			<param-value>struts-default.xml,struts-plugin.xml,conf/brs/struts.xml</param-value>
		</init-param>
	</filter>
	<filter-mapping>
	   <filter-name>strus2</filter-name>
	   <url-pattern>*.action</url-pattern>
	   <dispatcher>FORWARD</dispatcher>
	   <dispatcher>REQUEST</dispatcher>
	   <dispatcher>INCLUDE</dispatcher>
	</filter-mapping>
	
	<!-- 启动Web容器时，自动装配ApplicationContext的配置信息 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	 <!-- 当系统发生404/505错误的时候，跳转到自设页面。 -->
	 <error-page>
       <error-code>404</error-code>
       <location>/brs/jsp/404.jsp</location>
     </error-page>
     <error-page>
       <error-code>505</error-code>
       <location>/brs/jsp/505.jsp</location>
     </error-page>
	
</web-app>